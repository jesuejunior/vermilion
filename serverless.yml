service: vermilion 
# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details

custom:
  namespace: ${opt:stage}
  deploymentBucket: ${env:DEPLOYMENT_BUCKET}
  crawlerRole: ${env:CRAWLER_ROLE, "arn:aws:iam::${env:AWS_ACCOUNT_ID}:role/AWSGlueServiceRole-Crawler"}
  awsAccountId: ${env:AWS_ACCOUNT_ID}
  bucket: ${env:BUCKET}
	# vpc: ${env:VPC}
  # securityGroups: ${env:SECURITY_GROUPS}
  # subnets: ${env:SUBNETS}

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-1
  deploymentBucket: ${self:custom.deploymentBucket}
	iamRoleStatements:
    - Effect: Allow
      Action:
         - s3:GetObject
         - s3:ListBucket
         - s3:ListObjects
         - s3:GetObjectAcl
      Resource: "arn:aws:s3:::${self:custom.Bucket}/*"
    - Effect: Allow
      Action:
         - glue:CreateCrawler
         - glue:StartCrawler
      Resource: "arn:aws:glue:::crawler/*"

    - Effect: Allow
      Action:
         - glue:CreateDatabase
         - glue:GetDatabases
         - glue:CreateTable
      Resource:
         - "arn:aws:glue:::table/*/*"
         - "arn:aws:glue:::database/*"
         - "arn:aws:glue:::catalog" 
package:
 include:
   - lake/**
 exclude:
   - .git/**

functions:
  crawler:
    handler: handlers.crawler
    description: This is responsable for read S3 path then create crawlers and tables to be used by Athena
    memorySize: 128
    events:
      - schedule: rate(12 hours)
    environment:
      APP_NAMESPACE: ${self:custom.namespace}
      APP_CRAWLER_ROLE: ${self:custom.crawlerRole}
      APP_BUCKET: ${self:custom.bucket}

# resources:
#   Resources:
# 		AWSGlueServiceRole-Crawler:
#       Type: AWS::IAM::Role
#       Properties:
#         Path: /my/default/path/
#         #RoleName: MyDefaultRole # required if you want to use 'serverless deploy --function' later on
#         AssumeRolePolicyDocument:
#           Version: '2012-10-17'
#           Statement:
#             - Effect: Allow
#               Principal:
#                 Service:
#                   - glue.amazonaws.com
#               Action: sts:AssumeRole
#     S3BucketOutputs:
#       Type: AWS::S3::Bucket
#       Properties:
#         BucketName: "${self:custom.deploymentBucket}"

plugins:
  - serverless-python-requirements
